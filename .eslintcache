[{"C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\pages\\orders\\order-page.component.jsx":"1","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\components\\orders\\order.component.jsx":"2","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\components\\cart\\checkout-page-items\\checkout-items.component.jsx":"3","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\components\\orders\\order-items.component.jsx":"4","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\components\\header\\header.component.jsx":"5","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\redux\\root-reducer.js":"6","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\components\\products\\products.component.jsx":"7","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\pages\\login-register\\register.component.jsx":"8","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\redux\\cart\\cart.functionality.js":"9","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\pages\\payment\\payment-page.component.jsx":"10","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\pages\\login-register\\login.component.jsx":"11","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\axios.js":"12","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\index.js":"13","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\redux\\user\\user.actions.js":"14","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\firebase\\firebase-config.js":"15","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\redux\\user\\user.selectors.js":"16","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\redux\\store.js":"17"},{"size":1576,"mtime":1609077872196,"results":"18","hashOfConfig":"19"},{"size":1730,"mtime":1608966100303,"results":"20","hashOfConfig":"19"},{"size":2007,"mtime":1608965499760,"results":"21","hashOfConfig":"19"},{"size":1438,"mtime":1608965914431,"results":"22","hashOfConfig":"19"},{"size":3452,"mtime":1609391241486,"results":"23","hashOfConfig":"19"},{"size":226,"mtime":1608743222425,"results":"24","hashOfConfig":"19"},{"size":1199,"mtime":1608616125460,"results":"25","hashOfConfig":"19"},{"size":3685,"mtime":1609392564088,"results":"26","hashOfConfig":"19"},{"size":955,"mtime":1608505289352,"results":"27","hashOfConfig":"19"},{"size":6942,"mtime":1609390930545,"results":"28","hashOfConfig":"19"},{"size":2552,"mtime":1608826544096,"results":"29","hashOfConfig":"19"},{"size":294,"mtime":1609394304264,"results":"30","hashOfConfig":"19"},{"size":389,"mtime":1608496424409,"results":"31","hashOfConfig":"19"},{"size":158,"mtime":1608742736869,"results":"32","hashOfConfig":"19"},{"size":1436,"mtime":1608952136837,"results":"33","hashOfConfig":"19"},{"size":188,"mtime":1608742768018,"results":"34","hashOfConfig":"19"},{"size":270,"mtime":1608497140931,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ekv71r",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\pages\\orders\\order-page.component.jsx",["76"],"C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\components\\orders\\order.component.jsx",[],"C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\components\\cart\\checkout-page-items\\checkout-items.component.jsx",["77"],"C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\components\\orders\\order-items.component.jsx",["78"],"import React from 'react'\r\n\r\n\r\nimport '../../components/cart/checkout-page-items/checkout-items.styles.css';\r\n\r\nfunction OrderItems({ cartItem }) {\r\n    const { id, image, price, rating, title, quantity } = cartItem;\r\n   return (\r\n       <div className='checkoutProduct'>\r\n           <img className='checkoutProduct__image' src={image} alt='somethings here'/>\r\n\r\n           <div className='checkoutProduct__info'>\r\n               <p className='checkoutProduct__title'>{title}</p>\r\n               <p className='checkoutProduct__price'>\r\n                   <small>$</small>\r\n                   <strong>{price}</strong>\r\n               </p>\r\n               <div className='checkoutProduct__rating'>\r\n                   {\r\n                       Array(rating).fill().map((_, i) => (\r\n                           <p>‚≠ê</p>\r\n                       ))\r\n                   }\r\n               </div>\r\n               <div className='quantity'>\r\n                   <div>\r\n                       <span><strong>Quantity</strong></span>\r\n                       <span className='arrow'> \r\n                           &#10094;\r\n                       </span>\r\n                       <strong>{quantity}</strong>\r\n                       <span className='arrow'>\r\n                           &#10095;\r\n                       </span>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n\r\n       </div>\r\n   )\r\n};\r\n\r\nexport default OrderItems;\r\n","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\components\\header\\header.component.jsx",[],"C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\redux\\root-reducer.js",[],["79","80"],"C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\components\\products\\products.component.jsx",[],"C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\pages\\login-register\\register.component.jsx",["81","82","83"],"import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\r\n\r\n\r\n\r\nimport { auth, createUserProfileDocument } from '../../firebase/firebase-config';\r\n\r\nimport './register.styles.css';\r\n\r\nclass RegisterPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n    \r\n        this.state = {\r\n          displayName: '',\r\n          email: '',\r\n          password: '',\r\n          confirmPassword: ''\r\n        };\r\n      }\r\n    \r\n      handleSubmit = async event => {\r\n        event.preventDefault();\r\n    \r\n        const { displayName, email, password, confirmPassword } = this.state;\r\n    \r\n        if (password !== confirmPassword) {\r\n          alert(\"passwords don't match\");\r\n          return;\r\n        }\r\n\r\n        if ( password.length < 6 || confirmPassword.length < 6) {\r\n          alert(\"passwords must be longer than 6 characters\");\r\n          return\r\n        }\r\n    \r\n        try {\r\n          const { user } = await auth.createUserWithEmailAndPassword(\r\n            email,\r\n            password\r\n          );\r\n    \r\n          await createUserProfileDocument(user, { displayName });\r\n    \r\n          this.setState({\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n          });\r\n        } catch (error) {\r\n          alert(error);\r\n        }\r\n      };\r\n    \r\n      handleChange = event => {\r\n        const { name, value } = event.target;\r\n    \r\n        this.setState({ [name]: value });\r\n      };    \r\n\r\n    render () {\r\n    const { displayName, email, password, confirmPassword, currentUser } = this.state;\r\n    \r\n    return (\r\n        \r\n        <div className='login'>\r\n            <Link to='/'>\r\n                <img \r\n                className='login__logo'\r\n                src='https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Amazon_logo.svg/1024px-Amazon_logo.svg.png' />\r\n            </Link>\r\n\r\n            <div className=\"login__container\">\r\n                <h1>Registration</h1>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h5>Username</h5>\r\n                    <input type='text' value={displayName} onChange={this.handleChange} name='displayName' required />\r\n\r\n                    <h5>Email</h5>\r\n                    <input type='email' value={email} onChange={this.handleChange} name='email' required/>\r\n\r\n                    <h5>Password</h5>\r\n                    <input type='password' value={password} onChange={this.handleChange} name='password'  required/>\r\n\r\n                    <h5>Confirm Password</h5>\r\n                    <input type='password' value={confirmPassword} onChange={this.handleChange} name='confirmPassword'  required/>\r\n\r\n                    <button className='login__signInButton'>Register</button>\r\n                </form>\r\n\r\n                <p>\r\n                    By signing-in you agree to the AMAZON FAKE CLONE\r\n                    Conditions of Use & Sale. Please see our Privacy \r\n                    Notice, our Cookies Notice, and our Interest-Based\r\n                    Ads Notice.\r\n                </p>\r\n\r\n                <Link to='/login'>\r\n                    <button className='login__registerButton'>\r\n                        If you already have an account, Sign In\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )}\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentUser: selectCurrentUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(RegisterPage);\r\n","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\redux\\cart\\cart.functionality.js",[],"C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\pages\\payment\\payment-page.component.jsx",["84","85"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport CurrencyFormat from 'react-currency-format';\r\n\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { firestore } from '../../firebase/firebase-config';\r\n\r\nimport axios from '../../axios';\r\n\r\nimport CheckoutItems from '../../components/cart/checkout-page-items/checkout-items.component';\r\n\r\nimport { emptyCart } from '../../redux/cart/cart.actions'\r\nimport { selectCartItemsCount, selectCartItems, selectCartTotal } from '../../redux/cart/cart.selector';\r\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\r\n\r\n\r\nimport './payment-page.styles.css';\r\n\r\n\r\n\r\nfunction PaymentPage({ cartItems, itemCount, currentUser, total, emptyCart }) {\r\n    \r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const history = useHistory();\r\n\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const getClientSecret = async () => {\r\n            const response = await axios({\r\n                method: 'post',\r\n                url: `/payments/create?total=${total * 100}`\r\n            });\r\n            setClientSecret(response.data.clientSecret)\r\n        }\r\n        getClientSecret();\r\n    }, [cartItems])\r\n\r\n    console.log('WHAT IS LEARNED IN BOATING SCHOOL IS....', clientSecret)\r\n    \r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        }).then(({ paymentIntent }) => {\r\n\r\n            firestore.collection('users')\r\n                .doc(currentUser?.uid)\r\n                .collection('orders')\r\n                .doc(paymentIntent.id)\r\n                .set({\r\n                    cart: cartItems,\r\n                    amount: paymentIntent.amount,\r\n                    created: paymentIntent.created\r\n                })\r\n\r\n            setSucceeded(true);\r\n            setError(null)\r\n            setProcessing(false)\r\n\r\n            emptyCart();\r\n\r\n            history.replace('/') // orignally '/orders. fix bug later\r\n        })\r\n    }\r\n\r\n    const handleChange = e => {\r\n        setDisabled(e.empty);\r\n        setError(e.error ? e.error.message : \"\");\r\n    }\r\n\r\n    return (\r\n        <div className='payment'>\r\n            <div className='payment__container'>\r\n                <h1>\r\n                    Checkout (\r\n                        <Link to='checkout'>{itemCount} items</Link>\r\n                    )\r\n                </h1>\r\n\r\n                {/*PAYMENT SECTION - DELIVERY ADDY*/}\r\n                <div className=\"payment__section\">\r\n\r\n                    <div className=\"payment__title\">\r\n                        <h3>Delivery Address</h3>\r\n                    </div>\r\n                    <div className=\"payment__address\">\r\n                        { currentUser ? \r\n                        (<> \r\n                            <p>{ currentUser.email}</p>\r\n                        </>) : (<> </>)\r\n                        }\r\n                        <p>{/* ADD IN EMAIL*/}</p>\r\n                        <p>123 React Lane</p>\r\n                        <p>Dallas, TX</p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/*PAYMENT SECTION - REVIEW ITEMS*/}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Review items and delivery</h3>\r\n                    </div>\r\n                    <div className=\"payment__items\">\r\n                    {cartItems.map(\r\n                        cartItem => (\r\n                            <CheckoutItems key={cartItem.id} cartItem={cartItem} />\r\n                        )\r\n                    )}\r\n                    </div>\r\n                </div>\r\n\r\n                {/*PAYMENT SECTION - PAYMENT METHOD*/}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Payment Method</h3>\r\n                    </div>\r\n                    <div className=\"payment__details\">\r\n                        {/*STRIPE MAGIC*/}\r\n                        <form onSubmit={handleSubmit}>\r\n                            <CardElement onChange={handleChange}/>\r\n\r\n                            <div className='payment__priceContainer'>\r\n                                <CurrencyFormat\r\n                                    renderText={(value) => (\r\n                                        <>\r\n                                            <p>\r\n                                                <h3>Order Total: {value}</h3>\r\n                                            </p>\r\n                                            <small className='subtotal__gift'>\r\n                                                <input type='checkbox' />\r\n                                                This order contains a gift\r\n                                            </small>\r\n                                        </>\r\n                                    )}\r\n                                    decimalScale={2}\r\n                                    value={total}\r\n                                    displayType={'text'}\r\n                                    thousandSeparator={true}\r\n                                    prefix={'$'}\r\n                                />\r\n                                <button \r\n                                disabled={processing || disabled || succeeded}>\r\n                                    <span>{processing ? <p>Processing</p> : 'Buy Now'}</span>\r\n                                </button>\r\n                            </div>\r\n                            \r\n                            {error && <div>{error}</div>}\r\n                        </form>\r\n\r\n                        <h5 className='payment__message'>\r\n                            <span>Card Number: 4242 4242 4242 4242</span>\r\n                            <span>MM/YY, CVC, and Zip can be anything</span>\r\n                        </h5>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>   \r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems,\r\n    itemCount: selectCartItemsCount,\r\n    currentUser: selectCurrentUser,\r\n    total: selectCartTotal\r\n  });\r\n\r\n  const mapDispatchToProps = dispatch => ({\r\n    emptyCart: () => dispatch(emptyCart())\r\n  });\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentPage);\r\n","C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\pages\\login-register\\login.component.jsx",["86"],"C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\axios.js",["87"],"import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://us-central1-clone-37a95.cloudfunctions.net/api'\r\n});\r\n\r\nexport default instance;\r\n\r\n// https://us-central1-clone-37a95.cloudfunctions.net/api\r\n\r\n// local host: http://localhost:5001/clone-37a95/us-central1/api",["88","89"],"C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\index.js",[],"C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\redux\\user\\user.actions.js",[],"C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\firebase\\firebase-config.js",[],"C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\redux\\user\\user.selectors.js",[],"C:\\Users\\12144\\Documents\\Code Projects\\amazon-clone\\src\\redux\\store.js",[],{"ruleId":"90","severity":1,"message":"91","line":38,"column":6,"nodeType":"92","endLine":38,"endColumn":19,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":9,"column":14,"nodeType":"96","messageId":"97","endLine":9,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":7,"column":13,"nodeType":"96","messageId":"97","endLine":7,"endColumn":15},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"94","severity":1,"message":"102","line":2,"column":16,"nodeType":"96","messageId":"97","endLine":2,"endColumn":24},{"ruleId":"94","severity":1,"message":"103","line":67,"column":60,"nodeType":"96","messageId":"97","endLine":67,"endColumn":71},{"ruleId":"104","severity":1,"message":"105","line":73,"column":17,"nodeType":"106","endLine":75,"endColumn":126},{"ruleId":"90","severity":1,"message":"107","line":45,"column":8,"nodeType":"92","endLine":45,"endColumn":19,"suggestions":"108"},{"ruleId":"94","severity":1,"message":"109","line":53,"column":15,"nodeType":"96","messageId":"97","endLine":53,"endColumn":22},{"ruleId":"104","severity":1,"message":"105","line":41,"column":21,"nodeType":"106","endLine":43,"endColumn":130},{"ruleId":null,"fatal":true,"severity":2,"message":"110","line":4,"column":14},{"ruleId":"98","replacedBy":"111"},{"ruleId":"100","replacedBy":"112"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array.","ArrayExpression",["113"],"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["114"],"no-negated-in-lhs",["115"],"'Redirect' is defined but never used.","'currentUser' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'total'. Either include it or remove the dependency array.",["116"],"'payload' is assigned a value but never used.","Parsing error: Unterminated string constant\n\n  2 | \n  3 | const instance = axios.create({\n> 4 |     baseURL: 'cd ..\n    |              ^\n  5 |     '\n  6 | });\n  7 |",["114"],["115"],{"desc":"117","fix":"118"},"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [currentUser, orders]",{"range":"121","text":"122"},"Update the dependencies array to be: [cartItems, total]",{"range":"123","text":"124"},[1012,1025],"[currentUser, orders]",[1614,1625],"[cartItems, total]"]